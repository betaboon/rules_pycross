bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")
bazel_dep(name = "rules_pycross", version = "0.0.0")
bazel_dep(name = "rules_pycross_e2e_shared", version = "0.0.0")
bazel_dep(name = "rules_python", version = "0.31.0")

local_path_override(
    module_name = "rules_pycross",
    path = "../../..",
)

local_path_override(
    module_name = "rules_pycross_e2e_shared",
    path = "../../shared",
)

# rules_python
python = use_extension("@rules_python//python/extensions:python.bzl", "python")

# The default is latest - 1 to make sure nothing assumes latest == default
python.toolchain(
    is_default = True,
    python_version = "3.11.6",
)
python.toolchain(python_version = "3.10.11")
python.toolchain(python_version = "3.12.0")

# rules_pycross
environments = use_extension("@rules_pycross//pycross/extensions:environments.bzl", "environments")
environments.create_for_python_toolchains(
    name = "rules_pycross_e2e_environments",
    platforms = [
        "aarch64-apple-darwin",
        "aarch64-unknown-linux-gnu",
        "x86_64-unknown-linux-gnu",
    ],
    python_versions = [
        "3.10.11",
        "3.11.6",
        "3.12.0",
        "3.12",
    ],
)
use_repo(environments, "rules_pycross_e2e_environments")

# Lock repo for vended lock file
lock_file = use_extension("@rules_pycross//pycross/extensions:lock_file.bzl", "lock_file")
lock_file.instantiate(
    name = "uv_lock_file_repo",
    lock_file = "//:uv_lock_file.bzl",
)
use_repo(
    lock_file,
    "uv_lock_file_repo",
)
